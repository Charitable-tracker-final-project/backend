<<<<<<< HEAD
# Generated by Django 4.0.4 on 2022-04-22 20:02

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
=======
# Generated by Django 4.0.4 on 2022-04-23 17:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
>>>>>>> a282476e98409bbd1f2999f4f02ce08b3b62fe7d
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
<<<<<<< HEAD
=======
        migrations.CreateModel(
            name='Donationgoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donationgoal', models.IntegerField()),
                ('Interval', models.CharField(blank=True, choices=[('Week', 'Week'), ('Month', 'Month'), ('Year', 'Year')], max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteergoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volunteergoal', models.IntegerField()),
                ('Interval', models.CharField(blank=True, choices=[('Week', 'Week'), ('Month', 'Month'), ('Year', 'Year')], max_length=200)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteerrecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.IntegerField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('volunteerreceipt', models.ImageField(upload_to='reciepts')),
                ('cause', models.CharField(blank=True, choices=[('Animals', 'Animals'), ('Arts Culture Humanities', 'Arts Culture Humanities'), ('Asian Rights', 'Asian Rights'), ('Black Rights', 'Black Rights'), ('Community Development', 'Community Development'), ('Education', 'Education'), ('Environmental', 'Environmental'), ('Health', 'Health'), ('Human and Civil Rights', 'Human and Civil Rights'), ('Human Services', 'Human Services'), ('International', 'International'), ('Latino Rights', 'Latino Rights'), ('Research and Public Policy', 'Research and Public Policy'), ('Religion', 'Religion'), ("Women's Rights", "Women's Rights")], max_length=200)),
                ('volunteerrecord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vrecord', to='charitable.volunteergoal')),
            ],
        ),
        migrations.CreateModel(
            name='Donationrecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amountdonated', models.IntegerField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('donationreceipt', models.ImageField(upload_to='reciepts')),
                ('cause', models.CharField(blank=True, choices=[('Animals', 'Animals'), ('Arts Culture Humanities', 'Arts Culture Humanities'), ('Asian Rights', 'Asian Rights'), ('Black Rights', 'Black Rights'), ('Community Development', 'Community Development'), ('Education', 'Education'), ('Environmental', 'Environmental'), ('Health', 'Health'), ('Human and Civil Rights', 'Human and Civil Rights'), ('Human Services', 'Human Services'), ('International', 'International'), ('Latino Rights', 'Latino Rights'), ('Research and Public Policy', 'Research and Public Policy'), ('Religion', 'Religion'), ("Women's Rights", "Women's Rights")], max_length=200)),
                ('donationrecord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drecord', to='charitable.donationgoal')),
            ],
        ),
>>>>>>> a282476e98409bbd1f2999f4f02ce08b3b62fe7d
    ]
